/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageTemplateParameter } from './message-template-parameter';
import {
    MessageTemplateParameterFromJSON,
    MessageTemplateParameterFromJSONTyped,
    MessageTemplateParameterToJSON,
    MessageTemplateParameterToJSONTyped,
} from './message-template-parameter';

/**
 * 
 * @export
 * @interface MessageTemplate
 */
export interface MessageTemplate {
    /**
     * 
     * @type {string}
     * @memberof MessageTemplate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof MessageTemplate
     */
    description?: string | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MessageTemplate
     */
    texts: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof MessageTemplate
     */
    isSystemTemplate: boolean;
    /**
     * 
     * @type {Date}
     * @memberof MessageTemplate
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof MessageTemplate
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {Array<MessageTemplateParameter>}
     * @memberof MessageTemplate
     */
    parameters: Array<MessageTemplateParameter>;
}

/**
 * Check if a given object implements the MessageTemplate interface.
 */
export function instanceOfMessageTemplate(value: object): value is MessageTemplate {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('texts' in value) || value['texts'] === undefined) return false;
    if (!('isSystemTemplate' in value) || value['isSystemTemplate'] === undefined) return false;
    if (!('parameters' in value) || value['parameters'] === undefined) return false;
    return true;
}

export function MessageTemplateFromJSON(json: any): MessageTemplate {
    return MessageTemplateFromJSONTyped(json, false);
}

export function MessageTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageTemplate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'texts': json['texts'],
        'isSystemTemplate': json['is_system_template'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'parameters': ((json['parameters'] as Array<any>).map(MessageTemplateParameterFromJSON)),
    };
}

export function MessageTemplateToJSON(json: any): MessageTemplate {
    return MessageTemplateToJSONTyped(json, false);
}

export function MessageTemplateToJSONTyped(value?: MessageTemplate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'texts': value['texts'],
        'is_system_template': value['isSystemTemplate'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
        'parameters': ((value['parameters'] as Array<any>).map(MessageTemplateParameterToJSON)),
    };
}

