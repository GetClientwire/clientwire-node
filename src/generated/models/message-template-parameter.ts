/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ParameterKind } from './parameter-kind';
import {
    ParameterKindFromJSON,
    ParameterKindFromJSONTyped,
    ParameterKindToJSON,
    ParameterKindToJSONTyped,
} from './parameter-kind';

/**
 * 
 * @export
 * @interface MessageTemplateParameter
 */
export interface MessageTemplateParameter {
    /**
     * 
     * @type {string}
     * @memberof MessageTemplateParameter
     */
    name: string;
    /**
     * 
     * @type {ParameterKind}
     * @memberof MessageTemplateParameter
     */
    kind: ParameterKind;
    /**
     * 
     * @type {string}
     * @memberof MessageTemplateParameter
     */
    valuePath?: string | null;
}



/**
 * Check if a given object implements the MessageTemplateParameter interface.
 */
export function instanceOfMessageTemplateParameter(value: object): value is MessageTemplateParameter {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('kind' in value) || value['kind'] === undefined) return false;
    return true;
}

export function MessageTemplateParameterFromJSON(json: any): MessageTemplateParameter {
    return MessageTemplateParameterFromJSONTyped(json, false);
}

export function MessageTemplateParameterFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageTemplateParameter {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'kind': ParameterKindFromJSON(json['kind']),
        'valuePath': json['value_path'] == null ? undefined : json['value_path'],
    };
}

export function MessageTemplateParameterToJSON(json: any): MessageTemplateParameter {
    return MessageTemplateParameterToJSONTyped(json, false);
}

export function MessageTemplateParameterToJSONTyped(value?: MessageTemplateParameter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'kind': ParameterKindToJSON(value['kind']),
        'value_path': value['valuePath'],
    };
}

