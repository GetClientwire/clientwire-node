/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConversationType } from './conversation-type';
import {
    ConversationTypeFromJSON,
    ConversationTypeFromJSONTyped,
    ConversationTypeToJSON,
    ConversationTypeToJSONTyped,
} from './conversation-type';

/**
 * 
 * @export
 * @interface ConversationTypeListResponse
 */
export interface ConversationTypeListResponse {
    /**
     * A list of conversation types.
     * @type {Array<ConversationType>}
     * @memberof ConversationTypeListResponse
     */
    conversationTypes: Array<ConversationType>;
}

/**
 * Check if a given object implements the ConversationTypeListResponse interface.
 */
export function instanceOfConversationTypeListResponse(value: object): value is ConversationTypeListResponse {
    if (!('conversationTypes' in value) || value['conversationTypes'] === undefined) return false;
    return true;
}

export function ConversationTypeListResponseFromJSON(json: any): ConversationTypeListResponse {
    return ConversationTypeListResponseFromJSONTyped(json, false);
}

export function ConversationTypeListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationTypeListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'conversationTypes': ((json['conversation_types'] as Array<any>).map(ConversationTypeFromJSON)),
    };
}

export function ConversationTypeListResponseToJSON(json: any): ConversationTypeListResponse {
    return ConversationTypeListResponseToJSONTyped(json, false);
}

export function ConversationTypeListResponseToJSONTyped(value?: ConversationTypeListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conversation_types': ((value['conversationTypes'] as Array<any>).map(ConversationTypeToJSON)),
    };
}

