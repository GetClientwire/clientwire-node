/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookSignatureScheme } from './webhook-signature-scheme';
import {
    WebhookSignatureSchemeFromJSON,
    WebhookSignatureSchemeFromJSONTyped,
    WebhookSignatureSchemeToJSON,
    WebhookSignatureSchemeToJSONTyped,
} from './webhook-signature-scheme';

/**
 * Request to rotate the secret you can specify the signature schema, currently only v1 is supported.
 * @export
 * @interface RotateWebhookSecretRequest
 */
export interface RotateWebhookSecretRequest {
    /**
     * If provided, uses the signature_scheme to generate the secrets. Default and only supported is 'v1'.
     * @type {WebhookSignatureScheme}
     * @memberof RotateWebhookSecretRequest
     */
    signatureScheme?: WebhookSignatureScheme | null;
}



/**
 * Check if a given object implements the RotateWebhookSecretRequest interface.
 */
export function instanceOfRotateWebhookSecretRequest(value: object): value is RotateWebhookSecretRequest {
    return true;
}

export function RotateWebhookSecretRequestFromJSON(json: any): RotateWebhookSecretRequest {
    return RotateWebhookSecretRequestFromJSONTyped(json, false);
}

export function RotateWebhookSecretRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RotateWebhookSecretRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'signatureScheme': json['signature_scheme'] == null ? undefined : WebhookSignatureSchemeFromJSON(json['signature_scheme']),
    };
}

export function RotateWebhookSecretRequestToJSON(json: any): RotateWebhookSecretRequest {
    return RotateWebhookSecretRequestToJSONTyped(json, false);
}

export function RotateWebhookSecretRequestToJSONTyped(value?: RotateWebhookSecretRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'signature_scheme': WebhookSignatureSchemeToJSON(value['signatureScheme']),
    };
}

