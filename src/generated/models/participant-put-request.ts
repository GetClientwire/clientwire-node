/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ParticipantRole } from './participant-role';
import {
    ParticipantRoleFromJSON,
    ParticipantRoleFromJSONTyped,
    ParticipantRoleToJSON,
    ParticipantRoleToJSONTyped,
} from './participant-role';

/**
 * 
 * @export
 * @interface ParticipantPutRequest
 */
export interface ParticipantPutRequest {
    /**
     * Unique identifier for a conversation participant. If the conversation participant is created, this field will be ignored. The id from the URL takes precedence.
     * @type {string}
     * @memberof ParticipantPutRequest
     */
    id?: string | null;
    /**
     * Unique identifier for a conversation participant. If the conversation participant already exists, this field will be ignored.
     * @type {string}
     * @memberof ParticipantPutRequest
     */
    conversationId: string;
    /**
     * The role of the participant. This can only be set if the conversation participant does not exist yet.
     * @type {ParticipantRole}
     * @memberof ParticipantPutRequest
     */
    role: ParticipantRole;
    /**
     * The display name of the participant. The display name can not be empty or null.
     * @type {string}
     * @memberof ParticipantPutRequest
     */
    displayName?: string | null;
    /**
     * The phone number of a participant if he is a CLIENT. The field is otherwise always null.
     * @type {string}
     * @memberof ParticipantPutRequest
     */
    phoneNumber?: string | null;
    /**
     * The email of a participant if he is a CLIENT. The field is otherwise always null.
     * @type {string}
     * @memberof ParticipantPutRequest
     */
    email?: string | null;
    /**
     * The userId of a participant if he is a USER. The field is otherwise always null.
     * @type {string}
     * @memberof ParticipantPutRequest
     */
    userId?: string | null;
}



/**
 * Check if a given object implements the ParticipantPutRequest interface.
 */
export function instanceOfParticipantPutRequest(value: object): value is ParticipantPutRequest {
    if (!('conversationId' in value) || value['conversationId'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function ParticipantPutRequestFromJSON(json: any): ParticipantPutRequest {
    return ParticipantPutRequestFromJSONTyped(json, false);
}

export function ParticipantPutRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParticipantPutRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'conversationId': json['conversation_id'],
        'role': ParticipantRoleFromJSON(json['role']),
        'displayName': json['display_name'] == null ? undefined : json['display_name'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'email': json['email'] == null ? undefined : json['email'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
    };
}

export function ParticipantPutRequestToJSON(json: any): ParticipantPutRequest {
    return ParticipantPutRequestToJSONTyped(json, false);
}

export function ParticipantPutRequestToJSONTyped(value?: ParticipantPutRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'conversation_id': value['conversationId'],
        'role': ParticipantRoleToJSON(value['role']),
        'display_name': value['displayName'],
        'phone_number': value['phoneNumber'],
        'email': value['email'],
        'user_id': value['userId'],
    };
}

