/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Language } from './language';
import {
    LanguageFromJSON,
    LanguageFromJSONTyped,
    LanguageToJSON,
    LanguageToJSONTyped,
} from './language';

/**
 * 
 * @export
 * @interface UserPreferencePostRequest
 */
export interface UserPreferencePostRequest {
    /**
     * Unique identifier for the preferred conversation type.
     * @type {string}
     * @memberof UserPreferencePostRequest
     */
    preferredConversationTypeId?: string | null;
    /**
     * Unique identifier for the language. Possible values: en, de
     * @type {Language}
     * @memberof UserPreferencePostRequest
     */
    preferredLanguage?: Language | null;
}



/**
 * Check if a given object implements the UserPreferencePostRequest interface.
 */
export function instanceOfUserPreferencePostRequest(value: object): value is UserPreferencePostRequest {
    return true;
}

export function UserPreferencePostRequestFromJSON(json: any): UserPreferencePostRequest {
    return UserPreferencePostRequestFromJSONTyped(json, false);
}

export function UserPreferencePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPreferencePostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'preferredConversationTypeId': json['preferred_conversation_type_id'] == null ? undefined : json['preferred_conversation_type_id'],
        'preferredLanguage': json['preferred_language'] == null ? undefined : LanguageFromJSON(json['preferred_language']),
    };
}

export function UserPreferencePostRequestToJSON(json: any): UserPreferencePostRequest {
    return UserPreferencePostRequestToJSONTyped(json, false);
}

export function UserPreferencePostRequestToJSONTyped(value?: UserPreferencePostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'preferred_conversation_type_id': value['preferredConversationTypeId'],
        'preferred_language': LanguageToJSON(value['preferredLanguage']),
    };
}

