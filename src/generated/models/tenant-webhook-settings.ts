/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookSignatureScheme } from './webhook-signature-scheme';
import {
    WebhookSignatureSchemeFromJSON,
    WebhookSignatureSchemeFromJSONTyped,
    WebhookSignatureSchemeToJSON,
    WebhookSignatureSchemeToJSONTyped,
} from './webhook-signature-scheme';

/**
 * Represents the webhook settings for a tenant.
 * @export
 * @interface TenantWebhookSettings
 */
export interface TenantWebhookSettings {
    /**
     * Tenant ID (UUID) as a string.
     * @type {string}
     * @memberof TenantWebhookSettings
     */
    tenantId: string;
    /**
     * Scheme used for signing webhooks, e.g. 'v1'.
     * @type {WebhookSignatureScheme}
     * @memberof TenantWebhookSettings
     */
    signatureScheme?: WebhookSignatureScheme | null;
    /**
     * The URL where webhooks will be posted.
     * @type {string}
     * @memberof TenantWebhookSettings
     */
    endpointUrl?: string | null;
    /**
     * The plain (decrypted) secret, prefixed with whsec_. This is only returned by certain endpoints.
     * @type {string}
     * @memberof TenantWebhookSettings
     */
    secret?: string | null;
}



/**
 * Check if a given object implements the TenantWebhookSettings interface.
 */
export function instanceOfTenantWebhookSettings(value: object): value is TenantWebhookSettings {
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    return true;
}

export function TenantWebhookSettingsFromJSON(json: any): TenantWebhookSettings {
    return TenantWebhookSettingsFromJSONTyped(json, false);
}

export function TenantWebhookSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantWebhookSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'tenantId': json['tenant_id'],
        'signatureScheme': json['signature_scheme'] == null ? undefined : WebhookSignatureSchemeFromJSON(json['signature_scheme']),
        'endpointUrl': json['endpoint_url'] == null ? undefined : json['endpoint_url'],
        'secret': json['secret'] == null ? undefined : json['secret'],
    };
}

export function TenantWebhookSettingsToJSON(json: any): TenantWebhookSettings {
    return TenantWebhookSettingsToJSONTyped(json, false);
}

export function TenantWebhookSettingsToJSONTyped(value?: TenantWebhookSettings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tenant_id': value['tenantId'],
        'signature_scheme': WebhookSignatureSchemeToJSON(value['signatureScheme']),
        'endpoint_url': value['endpointUrl'],
        'secret': value['secret'],
    };
}

