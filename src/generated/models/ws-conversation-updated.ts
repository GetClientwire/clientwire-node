/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Conversation } from './conversation';
import {
    ConversationFromJSON,
    ConversationFromJSONTyped,
    ConversationToJSON,
    ConversationToJSONTyped,
} from './conversation';

/**
 * 
 * @export
 * @interface WsConversationUpdated
 */
export interface WsConversationUpdated {
    /**
     * Type of the message
     * @type {string}
     * @memberof WsConversationUpdated
     */
    type?: string | null;
    /**
     * 
     * @type {Conversation}
     * @memberof WsConversationUpdated
     */
    conversation: Conversation;
}

/**
 * Check if a given object implements the WsConversationUpdated interface.
 */
export function instanceOfWsConversationUpdated(value: object): value is WsConversationUpdated {
    if (!('conversation' in value) || value['conversation'] === undefined) return false;
    return true;
}

export function WsConversationUpdatedFromJSON(json: any): WsConversationUpdated {
    return WsConversationUpdatedFromJSONTyped(json, false);
}

export function WsConversationUpdatedFromJSONTyped(json: any, ignoreDiscriminator: boolean): WsConversationUpdated {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'conversation': ConversationFromJSON(json['conversation']),
    };
}

export function WsConversationUpdatedToJSON(json: any): WsConversationUpdated {
    return WsConversationUpdatedToJSONTyped(json, false);
}

export function WsConversationUpdatedToJSONTyped(value?: WsConversationUpdated | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'conversation': ConversationToJSON(value['conversation']),
    };
}

