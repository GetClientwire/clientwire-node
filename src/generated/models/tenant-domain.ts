/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Domain information for a tenant
 * @export
 * @interface TenantDomain
 */
export interface TenantDomain {
    /**
     * Unique identifier for the domain record
     * @type {string}
     * @memberof TenantDomain
     */
    id: string;
    /**
     * The tenant ID associated with this domain
     * @type {string}
     * @memberof TenantDomain
     */
    tenantId: string;
    /**
     * The full domain name
     * @type {string}
     * @memberof TenantDomain
     */
    domain: string;
    /**
     * Whether this domain is for the client app (true) or main app (false)
     * @type {boolean}
     * @memberof TenantDomain
     */
    isClientApp?: boolean;
    /**
     * Whether this is a system-provided domain (true) or a custom domain (false)
     * @type {boolean}
     * @memberof TenantDomain
     */
    isSystemDomain?: boolean;
    /**
     * Whether the domain is created or requested
     * @type {string}
     * @memberof TenantDomain
     */
    status: string;
}

/**
 * Check if a given object implements the TenantDomain interface.
 */
export function instanceOfTenantDomain(value: object): value is TenantDomain {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function TenantDomainFromJSON(json: any): TenantDomain {
    return TenantDomainFromJSONTyped(json, false);
}

export function TenantDomainFromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantDomain {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tenantId': json['tenantId'],
        'domain': json['domain'],
        'isClientApp': json['is_client_app'] == null ? undefined : json['is_client_app'],
        'isSystemDomain': json['is_system_domain'] == null ? undefined : json['is_system_domain'],
        'status': json['status'],
    };
}

export function TenantDomainToJSON(json: any): TenantDomain {
    return TenantDomainToJSONTyped(json, false);
}

export function TenantDomainToJSONTyped(value?: TenantDomain | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'tenantId': value['tenantId'],
        'domain': value['domain'],
        'is_client_app': value['isClientApp'],
        'is_system_domain': value['isSystemDomain'],
        'status': value['status'],
    };
}

