/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Schemes for signing webhooks. Currently only `v1` is supported.
 * @export
 */
export const WebhookSignatureScheme = {
    V1: 'v1'
} as const;
export type WebhookSignatureScheme = typeof WebhookSignatureScheme[keyof typeof WebhookSignatureScheme];


export function instanceOfWebhookSignatureScheme(value: any): boolean {
    for (const key in WebhookSignatureScheme) {
        if (Object.prototype.hasOwnProperty.call(WebhookSignatureScheme, key)) {
            if (WebhookSignatureScheme[key as keyof typeof WebhookSignatureScheme] === value) {
                return true;
            }
        }
    }
    return false;
}

export function WebhookSignatureSchemeFromJSON(json: any): WebhookSignatureScheme {
    return WebhookSignatureSchemeFromJSONTyped(json, false);
}

export function WebhookSignatureSchemeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookSignatureScheme {
    return json as WebhookSignatureScheme;
}

export function WebhookSignatureSchemeToJSON(value?: WebhookSignatureScheme | null): any {
    return value as any;
}

export function WebhookSignatureSchemeToJSONTyped(value: any, ignoreDiscriminator: boolean): WebhookSignatureScheme {
    return value as WebhookSignatureScheme;
}

