/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Activity } from './activity';
import {
    ActivityFromJSON,
    ActivityFromJSONTyped,
    ActivityToJSON,
    ActivityToJSONTyped,
} from './activity';

/**
 * 
 * @export
 * @interface ParticipantActivityRequest
 */
export interface ParticipantActivityRequest {
    /**
     * The activity of the participant.
     * @type {Activity}
     * @memberof ParticipantActivityRequest
     */
    activity: Activity;
    /**
     * last_message_sequence_seen is required for MESSAGE_SEEN activity.
     * @type {number}
     * @memberof ParticipantActivityRequest
     */
    lastMessageSequenceSeen?: number | null;
    /**
     * source_id is required for IS_TYPING activity.
     * @type {string}
     * @memberof ParticipantActivityRequest
     */
    sourceId?: string | null;
}



/**
 * Check if a given object implements the ParticipantActivityRequest interface.
 */
export function instanceOfParticipantActivityRequest(value: object): value is ParticipantActivityRequest {
    if (!('activity' in value) || value['activity'] === undefined) return false;
    return true;
}

export function ParticipantActivityRequestFromJSON(json: any): ParticipantActivityRequest {
    return ParticipantActivityRequestFromJSONTyped(json, false);
}

export function ParticipantActivityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParticipantActivityRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'activity': ActivityFromJSON(json['activity']),
        'lastMessageSequenceSeen': json['last_message_sequence_seen'] == null ? undefined : json['last_message_sequence_seen'],
        'sourceId': json['source_id'] == null ? undefined : json['source_id'],
    };
}

export function ParticipantActivityRequestToJSON(json: any): ParticipantActivityRequest {
    return ParticipantActivityRequestToJSONTyped(json, false);
}

export function ParticipantActivityRequestToJSONTyped(value?: ParticipantActivityRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activity': ActivityToJSON(value['activity']),
        'last_message_sequence_seen': value['lastMessageSequenceSeen'],
        'source_id': value['sourceId'],
    };
}

