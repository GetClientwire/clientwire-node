/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActionKind } from './action-kind';
import {
    ActionKindFromJSON,
    ActionKindFromJSONTyped,
    ActionKindToJSON,
    ActionKindToJSONTyped,
} from './action-kind';

/**
 * 
 * @export
 * @interface WorkflowAction
 */
export interface WorkflowAction {
    /**
     * What should happen when a workflow is triggered.
     * @type {ActionKind}
     * @memberof WorkflowAction
     */
    kind: ActionKind;
    /**
     * The name of the message template that should be used to build the message if relevant.
     * @type {string}
     * @memberof WorkflowAction
     */
    templateName?: string | null;
}



/**
 * Check if a given object implements the WorkflowAction interface.
 */
export function instanceOfWorkflowAction(value: object): value is WorkflowAction {
    if (!('kind' in value) || value['kind'] === undefined) return false;
    return true;
}

export function WorkflowActionFromJSON(json: any): WorkflowAction {
    return WorkflowActionFromJSONTyped(json, false);
}

export function WorkflowActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowAction {
    if (json == null) {
        return json;
    }
    return {
        
        'kind': ActionKindFromJSON(json['kind']),
        'templateName': json['template_name'] == null ? undefined : json['template_name'],
    };
}

export function WorkflowActionToJSON(json: any): WorkflowAction {
    return WorkflowActionToJSONTyped(json, false);
}

export function WorkflowActionToJSONTyped(value?: WorkflowAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'kind': ActionKindToJSON(value['kind']),
        'template_name': value['templateName'],
    };
}

