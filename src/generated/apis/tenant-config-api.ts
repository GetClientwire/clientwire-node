/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TenantConfig,
} from '../models/index';
import {
    TenantConfigFromJSON,
    TenantConfigToJSON,
} from '../models/index';

export interface GetTenantConfigRequest {
    tenantId?: string | null;
    tenantSubdomain?: string | null;
}

/**
 * TenantConfigApi - interface
 * 
 * @export
 * @interface TenantConfigApiInterface
 */
export interface TenantConfigApiInterface {
    /**
     * Either tenant_subdomain or tenant_id must be provided
     * @summary Get the current config for the tenant specified via query parameters.
     * @param {string} [tenantId] Get tenant config for the specified ID.
     * @param {string} [tenantSubdomain] Get tenant config for the specified subdomain.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantConfigApiInterface
     */
    getTenantConfigRaw(requestParameters: GetTenantConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TenantConfig>>;

    /**
     * Either tenant_subdomain or tenant_id must be provided
     * Get the current config for the tenant specified via query parameters.
     */
    getTenantConfig(requestParameters: GetTenantConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TenantConfig>;

}

/**
 * 
 */
export class TenantConfigApi extends runtime.BaseAPI implements TenantConfigApiInterface {

    /**
     * Either tenant_subdomain or tenant_id must be provided
     * Get the current config for the tenant specified via query parameters.
     */
    async getTenantConfigRaw(requestParameters: GetTenantConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TenantConfig>> {
        const queryParameters: any = {};

        if (requestParameters['tenantId'] != null) {
            queryParameters['tenant_id'] = requestParameters['tenantId'];
        }

        if (requestParameters['tenantSubdomain'] != null) {
            queryParameters['tenant_subdomain'] = requestParameters['tenantSubdomain'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/tenant/config`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TenantConfigFromJSON(jsonValue));
    }

    /**
     * Either tenant_subdomain or tenant_id must be provided
     * Get the current config for the tenant specified via query parameters.
     */
    async getTenantConfig(requestParameters: GetTenantConfigRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TenantConfig> {
        const response = await this.getTenantConfigRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
