/* tslint:disable */
/* eslint-disable */
/**
 * Wire API (development)
 * The API for the Clientwire messaging service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@clientwire.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SignupRequest,
  SignupResponse,
} from '../models/index';
import {
    SignupRequestFromJSON,
    SignupRequestToJSON,
    SignupResponseFromJSON,
    SignupResponseToJSON,
} from '../models/index';

export interface SignupOperationRequest {
    signupRequest: SignupRequest;
}

/**
 * SignupApi - interface
 * 
 * @export
 * @interface SignupApiInterface
 */
export interface SignupApiInterface {
    /**
     * Tenant and user created successfully. You should now be able to login.
     * @summary Create a new account and user.
     * @param {SignupRequest} signupRequest The data needed to sign up a new tenant and user.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SignupApiInterface
     */
    signupRaw(requestParameters: SignupOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SignupResponse>>;

    /**
     * Tenant and user created successfully. You should now be able to login.
     * Create a new account and user.
     */
    signup(requestParameters: SignupOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SignupResponse>;

}

/**
 * 
 */
export class SignupApi extends runtime.BaseAPI implements SignupApiInterface {

    /**
     * Tenant and user created successfully. You should now be able to login.
     * Create a new account and user.
     */
    async signupRaw(requestParameters: SignupOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SignupResponse>> {
        if (requestParameters['signupRequest'] == null) {
            throw new runtime.RequiredError(
                'signupRequest',
                'Required parameter "signupRequest" was null or undefined when calling signup().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/signup`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SignupRequestToJSON(requestParameters['signupRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SignupResponseFromJSON(jsonValue));
    }

    /**
     * Tenant and user created successfully. You should now be able to login.
     * Create a new account and user.
     */
    async signup(requestParameters: SignupOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SignupResponse> {
        const response = await this.signupRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
